Other ideas:
- history tree:
    /*
    * Inspiration from:
    * https://stackoverflow.com/questions/3032771/scalas-sealed-abstract-vs-abstract-class
    * https://stackoverflow.com/questions/9129671/change-node-in-scala-case-class-tree
    */
    sealed abstract class HistoryTree
    case class Node(children: List[HistoryTree], value: Rule) extends HistoryTree
    case class Leaf(value:Rule) extends HistoryTree


- The trees:
    The two classes for trees are almost identical, with little difference - how to make this better?



Backlog:
- In historyTree.addChild, what happens if the parent rule is there multiple times in the tree?
    The parameter (parent) should maybe be a node instead of a rule?

- In both tree structures, top can not have itself as a parent